version: "3.8"

services:
  kafka-producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    environment:
      - KAFKA_BROKERS=13.228.128.157:9092
      - LOG_LEVEL=INFO
    restart: unless-stopped
    networks:
      - kafka-network

  kafka-consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    environment:
      - KAFKA_BROKERS=13.228.128.157:9092
      - API_ENDPOINT=http://54.251.172.36:8000
      - LOG_LEVEL=INFO
    restart: unless-stopped
    networks:
      - kafka-network
    ports:
      - "8080:8080"

  kafka-debugger:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["python", "debug_kafka.py"]
    environment:
      - KAFKA_BROKERS=13.228.128.157:9092
      - API_ENDPOINT=http://54.251.172.36:8000
    networks:
      - kafka-network
    profiles:
      - debug

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: kafka-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka-broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://13.228.128.157:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-broker:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka-broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://13.228.128.157:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

networks:
  kafka-network:
    driver: bridge
